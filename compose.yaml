version: '3.7'

services:
  neo4j-db:
    image: neo4j:latest
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - "7474:7474"
      - "7687:7687"
#    networks:
#      - social-media-app-backend_default

  postgresql-db:
    image: postgres:latest
    environment:
      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
    ports:
      - '5432'
    networks:
      - social-media-app-backend_default

  mongodb:
    image: 'mongo:latest'
    environment:
      - 'MONGO_INITDB_DATABASE=mydatabase'
      - 'MONGO_INITDB_ROOT_PASSWORD=secret'
      - 'MONGO_INITDB_ROOT_USERNAME=root'
    ports:
      - '27017'
    networks:
      - social-media-app-backend_default

  elasticsearch-db:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.17.10'
    environment:
      - 'ELASTIC_PASSWORD=secret'
      - 'discovery.type=single-node'
      - 'xpack.security.enabled=false'
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - social-media-app-backend_default

#    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.1
##    image: blacktop/elasticsearch:7.10
#    network_mode: host
#    environment:
##      - discovery.type=single-node
##      - cluster.name=cluster
##      - bootstrap.memory_lock=true
##      - "xpack.security.enabled=false"
###      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#      - 'ELASTIC_PASSWORD=secret'
#      - 'discovery.type=single-node'
#      - 'xpack.security.enabled=false'
#    ports:
#      - "9200"
##      - "9300"

#  example:
#    build:
#      context: ..
#      dockerfile: .devcontainer/Dockerfile
#    volumes:
#      - ..:/workspace
#    links:
#      - database
#    environment:
#      - ORG_NEO4J_DRIVER_URI=bolt://database:7687
#    ports:
#      - "8080:8080"
#    command: sleep infinity

networks:
  social-media-app-backend_default:
    external: true